{"version":3,"file":"static/js/596.e612139a.chunk.js","mappings":"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","sources":["pages/Checkout/components/checkoutCompleteTable.jsx","pages/Checkout/components/createOrder.jsx","queries/orders/hooks/useCreateOrder.jsx","pages/Checkout/Checkout.jsx","queries/orders/Orders.jsx"],"sourcesContent":["import {\r\n  Table,\r\n  TableTheadTr,\r\n  TableTheadTd,\r\n  TableTbodyTr,\r\n  TableTbodyTd,\r\n  TableTbodyTotalTr,\r\n} from \"../../../styles/styledTable\";\r\n\r\nexport const CheckoutCompleteTable = ({ newOrder }) => {\r\n  return (\r\n    <Table>\r\n      <thead>\r\n        <TableTheadTr>\r\n          <TableTheadTd>\r\n            <b>#{newOrder[0].order_id}</b>\r\n          </TableTheadTd>\r\n          <TableTheadTd>Product id</TableTheadTd>\r\n          <TableTheadTd>Product name</TableTheadTd>\r\n          <TableTheadTd>Quantity ordered</TableTheadTd>\r\n          <TableTheadTd>Product total</TableTheadTd>\r\n        </TableTheadTr>\r\n      </thead>\r\n      <tbody>\r\n        {newOrder.map((product) => (\r\n          <TableTbodyTr key={product.product_id}>\r\n            <TableTbodyTd />\r\n            <TableTbodyTd>{product.product_id}</TableTbodyTd>\r\n            <TableTbodyTd>{product.product_name}</TableTbodyTd>\r\n            <TableTbodyTd>{product.product_qty}</TableTbodyTd>\r\n            <TableTbodyTd>\r\n              ${product.product_price * product.product_qty}\r\n            </TableTbodyTd>\r\n          </TableTbodyTr>\r\n        ))}\r\n        <TableTbodyTotalTr>\r\n          <TableTbodyTd />\r\n          <TableTbodyTd>Status:</TableTbodyTd>\r\n          <TableTbodyTd>{newOrder[0].status}</TableTbodyTd>\r\n          <TableTbodyTd>Total:</TableTbodyTd>\r\n          <TableTbodyTd>${newOrder[0].total}</TableTbodyTd>\r\n        </TableTbodyTotalTr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { CartContext } from \"../../../context/CartContext\";\r\nimport { UserContext } from \"../../../context/UserContext\";\r\nimport { useCreateOrder } from \"../../../queries/orders/hooks/useCreateOrder\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"../../../styles/styledButtons\";\r\nimport { CheckoutCompleteTable } from \"./checkoutCompleteTable\";\r\nimport { CartTable } from \"../../Cart/components/cartTable\";\r\n\r\nexport const CreateOrder = () => {\r\n  const cart = useContext(CartContext);\r\n\r\n  const { user } = useContext(UserContext);\r\n\r\n  const cartTotal = cart.getCartTotal();\r\n\r\n  const { mutate, isError, error, isLoading, data } = useCreateOrder();\r\n\r\n  const handleCreateOrder = () => {\r\n    const cartItems = cart.items.map((item) => {\r\n      delete item.stock;\r\n      return item;\r\n    });\r\n    mutate({ id: user.id, cart: cartItems, total: cartTotal });\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <div>\r\n        <Link to=\"/login\">\r\n          <h5 className=\"hover:scale-110 hover:text-primary-darkbeige hover:transition duration-300\">\r\n            Log in to place an order\r\n          </h5>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (data) {\r\n    const newOrder = data.data;\r\n    return (\r\n      <div className=\"mt-6\">\r\n        <h5>Order complete!</h5>\r\n        <CheckoutCompleteTable newOrder={newOrder} />\r\n        <div className=\"flex gap-4\">\r\n          <Link to=\"/categories\">\r\n            <Button>More shopping!</Button>\r\n          </Link>\r\n          <Link to={`/user/${user.id}`}>\r\n            <Button>Go to your profile</Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {cartTotal < 1 ? (\r\n        <div>No items</div>\r\n      ) : (\r\n        <div>\r\n          <CartTable />\r\n          <div className=\"my-2\">\r\n            <b>Total:</b> ${cart.getCartTotal()}\r\n          </div>\r\n          <div className=\"flex gap-4\">\r\n            <Button\r\n              onClick={() => {\r\n                handleCreateOrder();\r\n              }}\r\n            >\r\n              Create Order\r\n            </Button>\r\n            <div>\r\n              {isLoading && <div>Loading...</div>}\r\n              {isError && <div>{error?.message}</div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { createOrder } from \"../Orders\";\r\nimport { useContext } from \"react\";\r\nimport { CartContext } from \"../../../context/CartContext\";\r\n\r\nexport const useCreateOrder = () => {\r\n  const { emptyCart } = useContext(CartContext);\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(createOrder, {\r\n    onSuccess: () => {\r\n      emptyCart();\r\n      queryClient.invalidateQueries({ queryKey: [\"orders\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"user-orders\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"user-by-id\"] });\r\n    },\r\n  });\r\n};\r\n","import { CreateOrder } from \"./components/createOrder\";\r\n\r\nconst Checkout = () => {\r\n  return (\r\n    <section>\r\n      <div className=\"flex flex-col gap-4\">\r\n        <h2>Checkout</h2>\r\n        <CreateOrder />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import axios from \"axios\";\r\n\r\nconst ordersApi = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n\r\nexport const getAllOrders = async () => {\r\n  const response = await ordersApi.get(\"/api/web-shop/orders\");\r\n  return response.data;\r\n};\r\n\r\nexport const getOrderById = async (id) => {\r\n  const response = await ordersApi.get(`/api/web-shop/orders/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getUserOrders = async (id) => {\r\n  const response = await ordersApi.get(`/api/web-shop/orders/userorders/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createOrder = async (orderData) => {\r\n  const { id, cart, total } = orderData;\r\n  const newOrder = await ordersApi.post(`/api/web-shop/orders/${id}`, { cart, total });\r\n  return newOrder;\r\n};\r\n\r\nexport const updateOrderStatus = async (id, updatedStatus) => {\r\n  await ordersApi.patch(`/api/web-shop/orders/${id}`, updatedStatus);\r\n};\r\n\r\nexport const deleteOrder = async (id) => {\r\n  await ordersApi.delete(`/api/web-shop/orders/${id}`);\r\n};\r\n"],"names":["CheckoutCompleteTable","newOrder","order_id","map","product","product_id","product_name","product_qty","product_price","status","total","CreateOrder","cart","useContext","CartContext","user","UserContext","cartTotal","getCartTotal","emptyCart","queryClient","useQueryClient","useMutation","createOrder","onSuccess","invalidateQueries","queryKey","useCreateOrder","mutate","isError","error","isLoading","data","to","className","id","onClick","cartItems","items","item","stock","handleCreateOrder","message","ordersApi","axios","baseURL","process","getUserOrders","get","response","orderData","post"],"sourceRoot":""}