{"version":3,"file":"static/js/175.9283b59c.chunk.js","mappings":"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","sources":["styles/styledTabs.jsx","pages/Admin/components/userAdminComponents/createUserForm.jsx","pages/Admin/components/userAdminComponents/searchResult.jsx","pages/Admin/components/userAdminComponents/searchUserForm.jsx","queries/users/hooks/useSearchUser.jsx","styles/styledAdmin.jsx","pages/Admin/components/userAdminComponents/deleteUserButton.jsx","queries/users/hooks/useDeleteUser.jsx","pages/Admin/components/userAdminComponents/updateUserForm.jsx","queries/users/hooks/useUpdateUser.jsx","pages/Admin/components/userAdminComponents/searchedUserOrders.jsx","pages/Admin/components/usersAdmin.jsx","pages/Admin/components/productAdminComponents/createProductForm.jsx","queries/products/hooks/useCreateProduct.jsx","pages/Admin/components/productAdminComponents/productSearchResult.jsx","pages/Admin/components/productAdminComponents/searchProductForm.jsx","queries/products/hooks/useSearchProduct.jsx","pages/Admin/components/productAdminComponents/deleteProductButton.jsx","queries/products/hooks/useDeleteProduct.jsx","pages/Admin/components/productAdminComponents/updateProductForm.jsx","queries/products/hooks/useUpdateProduct.jsx","pages/Admin/components/productAdminComponents/searchedProductInfo.jsx","pages/Admin/components/productsAdmin.jsx","pages/Admin/components/categoryAdminComponents/createCategoryForm.jsx","queries/categories/hooks/useCreateCategory.jsx","pages/Admin/components/categoryAdminComponents/showCategories.jsx","queries/categories/hooks/useDeleteCategory.jsx","pages/Admin/components/categoriesAdmin.jsx","pages/Admin/Admin.jsx","queries/categories/Categories.jsx","queries/categories/hooks/useGetAllCategories.jsx","queries/orders/Orders.jsx","queries/orders/hooks/useGetUserOrders.jsx","queries/products/Products.jsx","queries/products/hooks/useGetProductById.jsx","queries/users/Users.jsx","queries/users/hooks/useCreateUser.jsx","queries/users/hooks/useGetUserById.jsx","styles/styledForm.jsx"],"sourcesContent":["import tw from \"tailwind-styled-components\";\r\n\r\nexport const TabContainer = tw.div`\r\n    flex\r\n    text-white\r\n    bg-primary-green\r\n    p-4\r\n    my-4\r\n`;\r\n\r\nexport const StyledTabUl = tw.ul`\r\n    flex\r\n    gap-6\r\n`;\r\n\r\nexport const StyledTab = tw.li`\r\n    border-b\r\n    hover: cursor-pointer\r\n`;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useCreateUser } from \"../../../../queries/users/hooks/useCreateUser\";\r\nimport {\r\n  FormContainer,\r\n  Form,\r\n  Input,\r\n  SubmitInput,\r\n  FormError,\r\n} from \"../../../../styles/styledForm\";\r\n\r\nexport const CreateUserForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const { mutate, isSuccess, isLoading, isError, error } = useCreateUser();\r\n\r\n  const handleCreateUser = (newUser) => {\r\n    mutate(newUser);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <div className=\"w-full text-center text-white bg-primary-green\">\r\n        <h5>Create user</h5>\r\n      </div>\r\n      <FormContainer>\r\n        <Form onSubmit={handleSubmit((newUser) => handleCreateUser(newUser))}>\r\n          <Input\r\n            {...register(\"firstname\", {\r\n              required: \"First name is required\",\r\n              minLength: { value: 2, message: \"Min length 2\" },\r\n            })}\r\n            placeholder=\"First Name\"\r\n            type=\"text\"\r\n          />\r\n          <FormError>{errors.firstname?.message}</FormError>\r\n          <Input\r\n            {...register(\"lastname\", {\r\n              required: \"Last name is required\",\r\n              minLength: { value: 2, message: \"Min length 2\" },\r\n            })}\r\n            placeholder=\"Last Name\"\r\n            type=\"text\"\r\n          />\r\n          <FormError>{errors.lastname?.message}</FormError>\r\n          <Input\r\n            {...register(\"email\", {\r\n              required: \"Email is required\",\r\n              minLength: { value: 5, message: \"Min length 5\" },\r\n            })}\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n          />\r\n          <FormError>{errors.email?.message}</FormError>\r\n          <Input\r\n            {...register(\"password\", {\r\n              required: \"Password is required\",\r\n              minLength: { value: 5, message: \"Min length 5\" },\r\n            })}\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          <FormError>{errors.password?.message}</FormError>\r\n          <SubmitInput type=\"submit\" value=\"Create user\" />\r\n        </Form>\r\n        {isSuccess && <h5 className=\"mt-4\">User created</h5>}\r\n        {isLoading && <h5 className=\"mt-4\">Loading...</h5>}\r\n        {isError && <h5 className=\"mt-4\">{error.message}</h5>}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n","export const SearchResult = ({\r\n  data,\r\n  isInitialLoading,\r\n  isError,\r\n  error,\r\n  handleSearchClick,\r\n}) => {\r\n  if (isInitialLoading) {\r\n    return <div className=\"text-center\">Loading...</div>;\r\n  }\r\n\r\n  if (isError) {\r\n    return <div className=\"text-center\">{error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-sm p-4\">\r\n      <ul>\r\n        {data &&\r\n          data.map((user) => (\r\n            <li\r\n              key={user.id}\r\n              onClick={() => handleSearchClick(user.id)}\r\n              className=\"my-1 hover:scale-100 hover:text-black hover:bg-primary-beige hover:cursor-pointer\"\r\n            >\r\n              <b>Id:</b>\r\n              {user.id} <b>Email:</b>\r\n              {user.email}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useSearchUser } from \"../../../../queries/users/hooks/useSearchUser\";\r\nimport {\r\n  FormContainer,\r\n  Form,\r\n  Input,\r\n  FormError,\r\n} from \"../../../../styles/styledForm\";\r\nimport { SearchResult } from \"./searchResult\";\r\n\r\nexport const SearchUserForm = ({ handleSearchClick }) => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm();\r\n\r\n  const { data, isInitialLoading, isError, error } = useSearchUser(\r\n    watch(\"searchword\")\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"w-full text-center text-white bg-primary-green\">\r\n        <h5>Search user by email</h5>\r\n      </div>\r\n      <FormContainer>\r\n        <Form>\r\n          <Input\r\n            {...register(\"searchword\")}\r\n            placeholder=\"Email includes...\"\r\n            type=\"search\"\r\n          />\r\n          <FormError>{errors.searchword?.message}</FormError>\r\n        </Form>\r\n      </FormContainer>\r\n      <SearchResult\r\n        data={data}\r\n        handleSearchClick={handleSearchClick}\r\n        isInitialLoading={isInitialLoading}\r\n        isError={isError}\r\n        error={error}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { searchUser } from \"../Users\";\r\n\r\nexport const useSearchUser = (searchWord) => {\r\n  return useQuery({\r\n    queryKey: [\"searched-user\", searchWord],\r\n    queryFn: () => searchUser(searchWord),\r\n    enabled: !!searchWord,\r\n  });\r\n};\r\n","import tw from \"tailwind-styled-components\";\r\n\r\nexport const AdminContainer = tw.div`\r\n    border-4\r\n    border-primary-darkgreen\r\n    my-2\r\n    w-1/4\r\n    min-w-[350px]\r\n    max-w-[496px]\r\n    bg-primary-darkbeige\r\n`;\r\n","import React from \"react\";\r\nimport { DeleteButton } from \"../../../../styles/styledButtons\";\r\nimport { useDeleteUser } from \"../../../../queries/users/hooks/useDeleteUser\";\r\n\r\nexport const DeleteUserButton = ({ id, setSearchedUserId }) => {\r\n  const { mutate, isLoading, isError, error } = useDeleteUser();\r\n\r\n  const handleDeleteUser = (id) => {\r\n    mutate(id);\r\n    setSearchedUserId(null);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (isError) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DeleteButton className=\"mt-4\" onClick={() => handleDeleteUser(id)}>\r\n        Delete user\r\n      </DeleteButton>\r\n    </div>\r\n  );\r\n};\r\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { deleteUser } from \"../Users\";\r\n\r\nexport const useDeleteUser = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(deleteUser, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"users\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"user-by-id\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"searched-user\"] });\r\n    },\r\n  });\r\n};\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useUpdateUser } from \"../../../../queries/users/hooks/useUpdateUser\";\r\nimport { useGetUserById } from \"../../../../queries/users/hooks/useGetUserById\";\r\nimport {\r\n  FormContainer,\r\n  Form,\r\n  Input,\r\n  SubmitInput,\r\n  FormError,\r\n} from \"../../../../styles/styledForm\";\r\nimport { useEffect } from \"react\";\r\nimport { DeleteUserButton } from \"./deleteUserButton\";\r\n\r\nexport const UpdateUserForm = ({ id, setSearchedUserId }) => {\r\n  const {\r\n    data: user,\r\n    isInitialLoading: userIsInitalLoading,\r\n    isError: userIsError,\r\n    error: userError,\r\n  } = useGetUserById(id);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const {\r\n    mutate,\r\n    isLoading: updateLoading,\r\n    isError: updateIsError,\r\n    error: updateError,\r\n  } = useUpdateUser();\r\n\r\n  const handleUpdateUser = (updatedUser) => {\r\n    mutate(updatedUser);\r\n    reset();\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"w-full text-center text-white bg-primary-green\">\r\n        <h5>Update user</h5>\r\n      </div>\r\n      {userIsInitalLoading && <h5 className=\"mt-4 text-center\">Loading...</h5>}\r\n      {userIsError && <h5 className=\"mt-4 text-center\">{userError.message}</h5>}\r\n      {user && (\r\n        <FormContainer>\r\n          <Form\r\n            className=\"gap-px\"\r\n            onSubmit={handleSubmit((updatedUser) =>\r\n              handleUpdateUser(updatedUser)\r\n            )}\r\n          >\r\n            <label htmlFor=\"firstname\">First Name</label>\r\n            <Input\r\n              {...register(\"firstname\", {\r\n                required: \"This is required\",\r\n                minLength: { value: 2, message: \"Min length 2\" },\r\n              })}\r\n              placeholder=\"First Name\"\r\n              defaultValue={user.firstname}\r\n              id=\"firstname\"\r\n              type=\"text\"\r\n            />\r\n            <FormError>{errors.firstname?.message}</FormError>\r\n            <label htmlFor=\"lastname\">Last Name</label>\r\n            <Input\r\n              {...register(\"lastname\", {\r\n                required: \"This is required\",\r\n                minLength: { value: 4, message: \"Min length 4\" },\r\n              })}\r\n              placeholder=\"Last Name\"\r\n              defaultValue={user.lastname}\r\n              id=\"lastname\"\r\n              type=\"text\"\r\n            />\r\n            <FormError>{errors.lastname?.message}</FormError>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <Input\r\n              {...register(\"email\", {\r\n                required: \"This is required\",\r\n                minLength: { value: 4, message: \"Min length 4\" },\r\n              })}\r\n              placeholder=\"Email\"\r\n              defaultValue={user.email}\r\n              id=\"email\"\r\n              type=\"email\"\r\n            />\r\n            <FormError>{errors.email?.message}</FormError>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n              {...register(\"password\", {\r\n                required: \"This is required\",\r\n                minLength: { value: 4, message: \"Min length 4\" },\r\n              })}\r\n              placeholder=\"Password\"\r\n              defaultValue={user.password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n            />\r\n            <FormError>{errors.password?.message}</FormError>\r\n            <Input {...register(\"id\")} value={user.id} hidden id=\"id\" />\r\n            <div className=\"flex gap-4\">\r\n              <SubmitInput className=\"mt-4\" type=\"submit\" value=\"Update user\" />\r\n              {updateLoading && (\r\n                <h5 className=\"mt-4 text-center\">Loading...</h5>\r\n              )}\r\n              {updateIsError && (\r\n                <h5 className=\"mt-4 text-center\">{updateError.message}</h5>\r\n              )}\r\n              <DeleteUserButton id={id} setSearchedUserId={setSearchedUserId} />\r\n            </div>\r\n          </Form>\r\n        </FormContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { updateUser } from \"../Users\";\r\n\r\nexport const useUpdateUser = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(updateUser, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"users\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"user-by-id\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"searched-user\"] });\r\n    },\r\n  });\r\n};\r\n","import { useGetUserOrders } from \"../../../../queries/orders/hooks/useGetUserOrders\";\r\nimport {\r\n  AdminTable,\r\n  TableTheadTr,\r\n  TableTheadTd,\r\n  TableTbodyTr,\r\n  TableTbodyTd,\r\n  TableTbodyTotalTr,\r\n} from \"../../../../styles/styledTable\";\r\n\r\nexport const SearchedUserOrders = ({ id }) => {\r\n  const {\r\n    data: orders,\r\n    isInitialLoading,\r\n    isError,\r\n    error,\r\n  } = useGetUserOrders(id);\r\n\r\n  if (isInitialLoading) {\r\n    return <div className=\"text-center\">Loading...</div>;\r\n  }\r\n\r\n  if (isError) {\r\n    return <div className=\"text-center\">{error.message}</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"w-full text-center text-white bg-primary-green\">\r\n        <h5>User orders</h5>\r\n      </div>\r\n      <div className=\"flex flex-col px-2 justify-center\">\r\n        {orders &&\r\n          orders.map((order) => (\r\n            <AdminTable key={order[0].order_id}>\r\n              <thead>\r\n                <TableTheadTr>\r\n                  <TableTheadTd>\r\n                    <b>#{order[0].order_id}</b>\r\n                  </TableTheadTd>\r\n                  <TableTheadTd>Product id</TableTheadTd>\r\n                  <TableTheadTd>Product name</TableTheadTd>\r\n                  <TableTheadTd>Quantity ordered</TableTheadTd>\r\n                  <TableTheadTd>Product total</TableTheadTd>\r\n                </TableTheadTr>\r\n              </thead>\r\n              <tbody>\r\n                {order.map((product) => (\r\n                  <TableTbodyTr key={product.product_id}>\r\n                    <TableTbodyTd />\r\n                    <TableTbodyTd>{product.product_id}</TableTbodyTd>\r\n                    <TableTbodyTd>{product.product_name}</TableTbodyTd>\r\n                    <TableTbodyTd>{product.product_qty}</TableTbodyTd>\r\n                    <TableTbodyTd>\r\n                      ${product.product_price * product.product_qty}\r\n                    </TableTbodyTd>\r\n                  </TableTbodyTr>\r\n                ))}\r\n                <TableTbodyTotalTr>\r\n                  <TableTbodyTd />\r\n                  <TableTbodyTd>Status:</TableTbodyTd>\r\n                  <TableTbodyTd>{order[0].status}</TableTbodyTd>\r\n                  <TableTbodyTd>Total:</TableTbodyTd>\r\n                  <TableTbodyTd>${order[0].total}</TableTbodyTd>\r\n                </TableTbodyTotalTr>\r\n              </tbody>\r\n            </AdminTable>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { CreateUserForm } from \"./userAdminComponents/createUserForm\";\r\nimport { SearchUserForm } from \"./userAdminComponents/searchUserForm\";\r\nimport { AdminContainer } from \"../../../styles/styledAdmin\";\r\nimport { UpdateUserForm } from \"./userAdminComponents/updateUserForm\";\r\nimport { SearchedUserOrders } from \"./userAdminComponents/searchedUserOrders\";\r\nimport { useState } from \"react\";\r\nimport { useQueryClient } from \"@tanstack/react-query\";\r\n\r\nexport const UsersAdmin = () => {\r\n  const [searchedUserId, setSearchedUserId] = useState(null);\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const handleSearchClick = async (id) => {\r\n    await queryClient.invalidateQueries({ queryKey: [\"searched-user\"] });\r\n    await queryClient.invalidateQueries({ queryKey: [\"user-by-id\"] });\r\n    setSearchedUserId(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap gap-8\">\r\n      <AdminContainer className=\"max-h-[410px]\">\r\n        <CreateUserForm />\r\n      </AdminContainer>\r\n      <AdminContainer className=\"max-h-[410px]\">\r\n        <SearchUserForm handleSearchClick={handleSearchClick} />\r\n      </AdminContainer>\r\n      <AdminContainer className=\"max-h-[410px]\">\r\n        <UpdateUserForm\r\n          id={searchedUserId}\r\n          setSearchedUserId={setSearchedUserId}\r\n        />\r\n      </AdminContainer>\r\n      <AdminContainer>\r\n        <SearchedUserOrders id={searchedUserId} />\r\n      </AdminContainer>\r\n    </div>\r\n  );\r\n};\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useCreateProduct } from \"../../../../queries/products/hooks/useCreateProduct\";\r\nimport { useGetAllCategories } from \"../../../../queries/categories/hooks/useGetAllCategories\";\r\nimport {\r\n  FormContainer,\r\n  Form,\r\n  Input,\r\n  SubmitInput,\r\n  FormError,\r\n  Textarea,\r\n  Select,\r\n} from \"../../../../styles/styledForm\";\r\n\r\nexport const CreateProductForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const { mutate, isSuccess, isLoading, isError, error } = useCreateProduct();\r\n\r\n  const {\r\n    data: categories,\r\n    isInitialLoading,\r\n    isError: isCategoriesError,\r\n    error: categoriesError,\r\n  } = useGetAllCategories();\r\n\r\n  const handleCreateProduct = (newProduct) => {\r\n    mutate(newProduct);\r\n    reset();\r\n  };\r\n\r\n  if (isInitialLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (isCategoriesError) {\r\n    return <div>{categoriesError.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"w-full text-center text-white bg-primary-green\">\r\n        <h5>Create product</h5>\r\n      </div>\r\n      <FormContainer>\r\n        <Form\r\n          onSubmit={handleSubmit((newProduct) =>\r\n            handleCreateProduct(newProduct)\r\n          )}\r\n        >\r\n          <Input\r\n            {...register(\"productname\", {\r\n              required: \"Product name is required\",\r\n              minLength: { value: 1, message: \"Min length 1\" },\r\n            })}\r\n            placeholder=\"Product Name\"\r\n          />\r\n          <FormError>{errors.productname?.message}</FormError>\r\n          <Select\r\n            {...register(\"category\", {\r\n              required: \"Category is required\",\r\n            })}\r\n            defaultValue=\"\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Choose a category--\r\n            </option>\r\n            {categories &&\r\n              categories.map((category) => (\r\n                <option key={category.id} value={`${category.category_name}`}>\r\n                  {category.category_name}\r\n                </option>\r\n              ))}\r\n          </Select>\r\n          <FormError>{errors.category?.message}</FormError>\r\n          <Textarea\r\n            {...register(\"description\", {\r\n              required: \"Description is required\",\r\n              minLength: { value: 1, message: \"Min length 1\" },\r\n            })}\r\n            placeholder=\"Description\"\r\n          />\r\n          <FormError>{errors.description?.message}</FormError>\r\n          <Input\r\n            {...register(\"product_img_url\", {\r\n              required: \"Product image url is required\",\r\n              minLength: { value: 2, message: \"Min length 2\" },\r\n            })}\r\n            placeholder=\"Product Image Url\"\r\n            type=\"text\"\r\n          />\r\n          <FormError>{errors.product_img_url?.message}</FormError>\r\n          <Input\r\n            {...register(\"price\", {\r\n              required: \"Price is required\",\r\n              minLength: { value: 1, message: \"Min length 1\" },\r\n            })}\r\n            placeholder=\"Price\"\r\n          />\r\n          <FormError>{errors.price?.message}</FormError>\r\n          <Input\r\n            {...register(\"stock\", {\r\n              required: \"Stock is required\",\r\n              minLength: { value: 1, message: \"Min length 1\" },\r\n            })}\r\n            placeholder=\"Stock\"\r\n          />\r\n          <FormError>{errors.price?.message}</FormError>\r\n          <SubmitInput type=\"submit\" />\r\n        </Form>\r\n        {isSuccess && <h5 className=\"mt-4\">Product created</h5>}\r\n        {isLoading && <h5 className=\"mt-4\">Loading...</h5>}\r\n        {isError && <h5 className=\"mt-4\">{error.message}</h5>}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { createProduct } from \"../Products\";\r\n\r\nexport const useCreateProduct = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(createProduct, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"products\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"product-by-id\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"searched-product\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"products-by-category\"] });\r\n    },\r\n  });\r\n};\r\n","export const ProductSearchResult = ({\r\n  data,\r\n  isInitialLoading,\r\n  isError,\r\n  error,\r\n  handleSearchClick,\r\n}) => {\r\n  if (isInitialLoading) {\r\n    return <div className=\"text-center\">Loading...</div>;\r\n  }\r\n\r\n  if (isError) {\r\n    return <div className=\"text-center\">{error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-sm p-4\">\r\n      <ul>\r\n        {data &&\r\n          data.map((product) => (\r\n            <li\r\n              key={product.id}\r\n              onClick={() => handleSearchClick(product.id)}\r\n              className=\"my-1 hover:scale-100 hover:text-black hover:bg-primary-beige hover:cursor-pointer\"\r\n            >\r\n              <b>Id: </b>\r\n              {product.id}\r\n              <b> Name: </b>\r\n              {product.productname}\r\n              <b> Price: </b>${product.price}\r\n              <b> Stock: </b>\r\n              {product.stock}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useSearchProduct } from \"../../../../queries/products/hooks/useSearchProduct\";\r\nimport {\r\n  FormContainer,\r\n  Form,\r\n  Input,\r\n  FormError,\r\n} from \"../../../../styles/styledForm\";\r\nimport { ProductSearchResult } from \"./productSearchResult\";\r\n\r\nexport const SearchProductForm = ({ handleSearchClick }) => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm();\r\n\r\n  const { data, isInitialLoading, isError, error } = useSearchProduct(\r\n    watch(\"productsearchword\")\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"w-full text-center text-white bg-primary-green\">\r\n        <h5>Search product by name</h5>\r\n      </div>\r\n      <FormContainer>\r\n        <Form>\r\n          <Input\r\n            {...register(\"productsearchword\")}\r\n            placeholder=\"Product name includes...\"\r\n            type=\"search\"\r\n          />\r\n          <FormError>{errors.productsearchword?.message}</FormError>\r\n        </Form>\r\n      </FormContainer>\r\n      <ProductSearchResult\r\n        data={data}\r\n        handleSearchClick={handleSearchClick}\r\n        isInitialLoading={isInitialLoading}\r\n        isError={isError}\r\n        error={error}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { searchProduct } from \"../Products\";\r\n\r\nexport const useSearchProduct = (searchWord) => {\r\n  return useQuery({\r\n    queryKey: [\"searched-product\", searchWord],\r\n    queryFn: () => searchProduct(searchWord),\r\n    enabled: !!searchWord,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { DeleteButton } from \"../../../../styles/styledButtons\";\r\nimport { useDeleteProduct } from \"../../../../queries/products/hooks/useDeleteProduct\";\r\n\r\nexport const DeleteProductButton = ({ id, setSearchedProductId }) => {\r\n  const { mutate, isLoading, isError, error } = useDeleteProduct();\r\n\r\n  const handleDeleteProduct = (id) => {\r\n    mutate(id);\r\n    setSearchedProductId(null);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (isError) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DeleteButton className=\"mt-4\" onClick={() => handleDeleteProduct(id)}>\r\n        Delete product\r\n      </DeleteButton>\r\n    </div>\r\n  );\r\n};\r\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { deleteProduct } from \"../Products\";\r\n\r\nexport const useDeleteProduct = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(deleteProduct, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"products\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"product-by-id\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"searched-product\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"products-by-category\"] });\r\n    },\r\n  });\r\n};\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useUpdateProduct } from \"../../../../queries/products/hooks/useUpdateProduct\";\r\nimport { useGetProductById } from \"../../../../queries/products/hooks/useGetProductById\";\r\nimport { useGetAllCategories } from \"../../../../queries/categories/hooks/useGetAllCategories\";\r\nimport {\r\n  FormContainer,\r\n  Form,\r\n  Input,\r\n  SubmitInput,\r\n  FormError,\r\n  Textarea,\r\n  Select,\r\n} from \"../../../../styles/styledForm\";\r\nimport { useEffect } from \"react\";\r\nimport { DeleteProductButton } from \"./deleteProductButton\";\r\n\r\nexport const UpdateProductForm = ({ id, setSearchedProductId }) => {\r\n  const {\r\n    data: product,\r\n    isInitialLoading: productIsInitalLoading,\r\n    isError: productIsError,\r\n    error: productError,\r\n  } = useGetProductById(id);\r\n\r\n  const {\r\n    data: categories,\r\n    isInitialLoading,\r\n    isError: isCategoriesError,\r\n    error: categoriesError,\r\n  } = useGetAllCategories();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const {\r\n    mutate,\r\n    isLoading: updateLoading,\r\n    isError: updateIsError,\r\n    error: updateError,\r\n  } = useUpdateProduct();\r\n\r\n  const handleUpdateProduct = (updatedProduct) => {\r\n    mutate(updatedProduct);\r\n    reset();\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  if (isInitialLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (isCategoriesError) {\r\n    return <div>{categoriesError.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"w-full text-center text-white bg-primary-green\">\r\n        <h5>Update product</h5>\r\n      </div>\r\n      {productIsInitalLoading && (\r\n        <h5 className=\"mt-4 text-center\">Loading...</h5>\r\n      )}\r\n      {productIsError && (\r\n        <h5 className=\"mt-4 text-center\">{productError.message}</h5>\r\n      )}\r\n      {product && (\r\n        <FormContainer>\r\n          <Form\r\n            className=\"gap-px\"\r\n            onSubmit={handleSubmit((updatedProduct) =>\r\n              handleUpdateProduct(updatedProduct)\r\n            )}\r\n          >\r\n            <label htmlFor=\"productname\">Product Name</label>\r\n            <Input\r\n              {...register(\"productname\", {\r\n                required: \"This is required\",\r\n                minLength: { value: 1, message: \"Min length 1\" },\r\n              })}\r\n              placeholder=\"Product Name\"\r\n              defaultValue={product.productname}\r\n              id=\"productname\"\r\n            />\r\n            <FormError>{errors.productname?.message}</FormError>\r\n            <label htmlFor=\"category\">Category Name</label>\r\n            <Select\r\n              {...register(\"category\", {\r\n                required: \"Category is required\",\r\n              })}\r\n              defaultValue=\"\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                --Choose a category--\r\n              </option>\r\n              {categories &&\r\n                categories.map((category) => (\r\n                  <option key={category.id} value={`${category.category_name}`}>\r\n                    {category.category_name}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n            <FormError>{errors.category?.message}</FormError>\r\n            <label htmlFor=\"description\">Description</label>\r\n            <Textarea\r\n              {...register(\"description\", {\r\n                required: \"This is required\",\r\n                minLength: { value: 1, message: \"Min length 1\" },\r\n              })}\r\n              placeholder=\"Description\"\r\n              defaultValue={product.description}\r\n              id=\"description\"\r\n            />\r\n            <FormError>{errors.description?.message}</FormError>\r\n            <label htmlFor=\"product_img_url\">Product img url</label>\r\n            <Input\r\n              {...register(\"product_img_url\", {\r\n                required: \"Product image url is required\",\r\n                minLength: { value: 2, message: \"Min length 2\" },\r\n              })}\r\n              placeholder=\"Product Image Url\"\r\n              type=\"text\"\r\n              defaultValue={product.product_img_url}\r\n              id=\"product_img_url\"\r\n            />\r\n            <FormError>{errors.product_img_url?.message}</FormError>\r\n            <label htmlFor=\"price\">Price</label>\r\n            <Input\r\n              {...register(\"price\", {\r\n                required: \"This is required\",\r\n                minLength: { value: 1, message: \"Min length 1\" },\r\n              })}\r\n              placeholder=\"price\"\r\n              defaultValue={product.price}\r\n              id=\"price\"\r\n            />\r\n            <FormError>{errors.price?.message}</FormError>\r\n            <label htmlFor=\"stock\">Stock</label>\r\n            <Input\r\n              {...register(\"stock\", {\r\n                required: \"This is required\",\r\n                minLength: { value: 1, message: \"Min length 1\" },\r\n              })}\r\n              placeholder=\"stock\"\r\n              defaultValue={product.stock}\r\n              id=\"stock\"\r\n            />\r\n            <FormError>{errors.stock?.message}</FormError>\r\n            <Input {...register(\"id\")} value={product.id} hidden id=\"id\" />\r\n            <div className=\"flex gap-4\">\r\n              <SubmitInput\r\n                className=\"mt-4\"\r\n                type=\"submit\"\r\n                value=\"Update product\"\r\n              />\r\n              {updateLoading && (\r\n                <h5 className=\"mt-4 text-center\">Loading...</h5>\r\n              )}\r\n              {updateIsError && (\r\n                <h5 className=\"mt-4 text-center\">{updateError.message}</h5>\r\n              )}\r\n              <DeleteProductButton\r\n                id={id}\r\n                setSearchedProductId={setSearchedProductId}\r\n              />\r\n            </div>\r\n          </Form>\r\n        </FormContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { updateProduct } from \"../Products\";\r\n\r\nexport const useUpdateProduct = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(updateProduct, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"products\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"product-by-id\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"searched-product\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"products-by-category\"] });\r\n    },\r\n  });\r\n};\r\n","import { useGetProductById } from \"../../../../queries/products/hooks/useGetProductById\";\r\nimport {\r\n  AdminTable,\r\n  TableTheadTr,\r\n  TableTheadTd,\r\n  TableTbodyTr,\r\n  TableTbodyTd,\r\n} from \"../../../../styles/styledTable\";\r\n\r\nexport const SearchedProductInfo = ({ id }) => {\r\n  const { data, isInitialLoading, isError, error } = useGetProductById(id);\r\n\r\n  if (isInitialLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (isError) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <div className=\"w-full text-center text-white bg-primary-green\">\r\n        <h5>Product info</h5>\r\n      </div>\r\n      <div className=\"flex max-w-full\">\r\n        <div className=\"flex flex-col items-center\">\r\n          {data && (\r\n            <>\r\n              <AdminTable>\r\n                <thead>\r\n                  <TableTheadTr>\r\n                    <TableTheadTd>Id</TableTheadTd>\r\n                    <TableTheadTd>{data.id}</TableTheadTd>\r\n                  </TableTheadTr>\r\n                </thead>\r\n                <tbody>\r\n                  <TableTbodyTr>\r\n                    <TableTbodyTd className=\"w-1/2\">Name</TableTbodyTd>\r\n                    <TableTbodyTd>{data.productname}</TableTbodyTd>\r\n                  </TableTbodyTr>\r\n                  <TableTbodyTr>\r\n                    <TableTbodyTd>Category</TableTbodyTd>\r\n                    <TableTbodyTd>{data.category}</TableTbodyTd>\r\n                  </TableTbodyTr>\r\n                  <TableTbodyTr>\r\n                    <TableTbodyTd>Price</TableTbodyTd>\r\n                    <TableTbodyTd>${data.price}</TableTbodyTd>\r\n                  </TableTbodyTr>\r\n                  <TableTbodyTr>\r\n                    <TableTbodyTd>Stock</TableTbodyTd>\r\n                    <TableTbodyTd>{data.stock}</TableTbodyTd>\r\n                  </TableTbodyTr>\r\n                </tbody>\r\n              </AdminTable>\r\n              <div>\r\n                <b>Description</b>\r\n              </div>\r\n              <div className=\"p-4 max-w-full\">\r\n                <p className=\"break-normal overflow-auto\">{data.description}</p>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { CreateProductForm } from \"./productAdminComponents/createProductForm\";\r\nimport { SearchProductForm } from \"./productAdminComponents/searchProductForm\";\r\nimport { UpdateProductForm } from \"./productAdminComponents/updateProductForm\";\r\nimport { AdminContainer } from \"../../../styles/styledAdmin\";\r\nimport { useState } from \"react\";\r\nimport { useQueryClient } from \"@tanstack/react-query\";\r\nimport { SearchedProductInfo } from \"./productAdminComponents/searchedProductInfo\";\r\n\r\nexport const ProductsAdmin = () => {\r\n  const [searchedProductId, setSearchedProductId] = useState(null);\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const handleSearchClick = async (id) => {\r\n    await queryClient.invalidateQueries({ queryKey: [\"searched-product\"] });\r\n    await queryClient.invalidateQueries({ queryKey: [\"product-by-id\"] });\r\n    setSearchedProductId(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap gap-8\">\r\n      <AdminContainer>\r\n        <CreateProductForm />\r\n      </AdminContainer>\r\n      <AdminContainer>\r\n        <SearchProductForm handleSearchClick={handleSearchClick} />\r\n      </AdminContainer>\r\n      <AdminContainer>\r\n        <UpdateProductForm\r\n          id={searchedProductId}\r\n          setSearchedProductId={setSearchedProductId}\r\n        />\r\n      </AdminContainer>\r\n      <AdminContainer>\r\n        <SearchedProductInfo id={searchedProductId} />\r\n      </AdminContainer>\r\n    </div>\r\n  );\r\n};\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useCreateCategory } from \"../../../../queries/categories/hooks/useCreateCategory\";\r\nimport {\r\n  FormContainer,\r\n  Form,\r\n  Input,\r\n  SubmitInput,\r\n  FormError,\r\n} from \"../../../../styles/styledForm\";\r\n\r\nexport const CreateCategoryForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const { mutate, isSuccess, isLoading, isError, error } = useCreateCategory();\r\n\r\n  const handleCreateCategory = (newCategory) => {\r\n    mutate(newCategory);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <div className=\"w-full text-center text-white bg-primary-green\">\r\n        <h5>Create category</h5>\r\n      </div>\r\n      <FormContainer>\r\n        <Form\r\n          onSubmit={handleSubmit((newCategory) =>\r\n            handleCreateCategory(newCategory)\r\n          )}\r\n        >\r\n          <Input\r\n            {...register(\"category_name\", {\r\n              required: \"Category name is required\",\r\n              minLength: { value: 2, message: \"Min length 2\" },\r\n            })}\r\n            placeholder=\"Category Name\"\r\n            type=\"text\"\r\n          />\r\n          <FormError>{errors.categoryname?.message}</FormError>\r\n          <Input\r\n            {...register(\"category_img_url\", {\r\n              required: \"Category image url is required\",\r\n              minLength: { value: 2, message: \"Min length 2\" },\r\n            })}\r\n            placeholder=\"Category Image Url\"\r\n            type=\"text\"\r\n          />\r\n          <FormError>{errors.category_img_url?.message}</FormError>\r\n          <SubmitInput type=\"submit\" value=\"Create category\" />\r\n        </Form>\r\n        {isSuccess && <h5 className=\"mt-4\">Category created</h5>}\r\n        {isLoading && <h5 className=\"mt-4\">Loading...</h5>}\r\n        {isError && <h5 className=\"mt-4\">{error.message}</h5>}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { createCategory } from \"../Categories\";\r\n\r\nexport const useCreateCategory = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(createCategory, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"categories\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"category-by-id\"] });\r\n    },\r\n  });\r\n};\r\n","import { useDeleteCategory } from \"../../../../queries/categories/hooks/useDeleteCategory\";\r\nimport { useGetAllCategories } from \"../../../../queries/categories/hooks/useGetAllCategories\";\r\nimport {\r\n  AdminTable,\r\n  TableTheadTr,\r\n  TableTheadTd,\r\n  TableTbodyTr,\r\n  TableTbodyTd,\r\n} from \"../../../../styles/styledTable\";\r\nimport { DeleteButtonSmall } from \"../../../../styles/styledButtons\";\r\n\r\nexport const ShowCategories = () => {\r\n  const {\r\n    data: categories,\r\n    isInitialLoading,\r\n    isError: isCategoriesError,\r\n    error: categoriesError,\r\n  } = useGetAllCategories();\r\n\r\n  const { mutate, isSuccess, isLoading, isError, error } = useDeleteCategory();\r\n\r\n  const handleDeleteCategory = (id) => {\r\n    mutate(id);\r\n  };\r\n\r\n  if (isInitialLoading) {\r\n    return <div className=\"text-center\">Loading...</div>;\r\n  }\r\n\r\n  if (isCategoriesError) {\r\n    return <div className=\"text-center\">{categoriesError.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"w-full text-center text-white bg-primary-green\">\r\n        <h5>Categories</h5>\r\n      </div>\r\n      <div className=\"flex flex-col px-2\">\r\n        {categories && (\r\n          <AdminTable>\r\n            <thead>\r\n              <TableTheadTr>\r\n                <TableTheadTd>Id</TableTheadTd>\r\n                <TableTheadTd>Name</TableTheadTd>\r\n                <TableTheadTd>Url</TableTheadTd>\r\n                <TableTheadTd />\r\n              </TableTheadTr>\r\n            </thead>\r\n            <tbody>\r\n              {categories.map((category) => (\r\n                <TableTbodyTr key={category.id}>\r\n                  <TableTbodyTd>{category.id}</TableTbodyTd>\r\n                  <TableTbodyTd>{category.category_name}</TableTbodyTd>\r\n                  <TableTbodyTd className=\"max-w-[120px] overflow-auto\">\r\n                    {category.category_img_url}\r\n                  </TableTbodyTd>\r\n                  <TableTbodyTd className=\"text-right\">\r\n                    <DeleteButtonSmall\r\n                      onClick={() => handleDeleteCategory(category.id)}\r\n                    >\r\n                      Delete\r\n                    </DeleteButtonSmall>\r\n                  </TableTbodyTd>\r\n                </TableTbodyTr>\r\n              ))}\r\n            </tbody>\r\n          </AdminTable>\r\n        )}\r\n        {isSuccess && <h5 className=\"mt-4\">Category deleted</h5>}\r\n        {isLoading && <h5 className=\"mt-4\">Loading...</h5>}\r\n        {isError && <h5 className=\"mt-4\">{error.message}</h5>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { deleteCategory } from \"../Categories\";\r\n\r\nexport const useDeleteCategory = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(deleteCategory, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"categories\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"category-by-id\"] });\r\n    },\r\n  });\r\n};\r\n","import { CreateCategoryForm } from \"./categoryAdminComponents/createCategoryForm\";\r\nimport { ShowCategories } from \"./categoryAdminComponents/showCategories\";\r\n\r\nimport { AdminContainer } from \"../../../styles/styledAdmin\";\r\n\r\nexport const CategoriesAdmin = () => {\r\n  return (\r\n    <div className=\"flex flex-wrap gap-8\">\r\n      <AdminContainer>\r\n        <CreateCategoryForm />\r\n      </AdminContainer>\r\n      <AdminContainer>\r\n        <ShowCategories />\r\n      </AdminContainer>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { StyledTab, StyledTabUl, TabContainer } from \"../../styles/styledTabs\";\r\nimport { UsersAdmin } from \"./components/usersAdmin\";\r\nimport { ProductsAdmin } from \"./components/productsAdmin\";\r\nimport { CategoriesAdmin } from \"./components/categoriesAdmin\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\n\r\nconst Admin = () => {\r\n  const tabs = [\"Users\", \"Products\", \"Categories\"];\r\n  const [activeTab, setActiveTab] = useState(tabs[0]);\r\n  const { user } = useContext(UserContext);\r\n\r\n  if (!user || user?.role !== \"admin\") {\r\n    return <div>401 Authorization denied</div>;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"w-full\">\r\n        <h3>Admin</h3>\r\n        <TabContainer>\r\n          <StyledTabUl>\r\n            {tabs.map((tab, i) => (\r\n              <StyledTab key={i} onClick={() => setActiveTab(tab)}>\r\n                {tab}\r\n              </StyledTab>\r\n            ))}\r\n          </StyledTabUl>\r\n        </TabContainer>\r\n        {activeTab === \"Users\" && <UsersAdmin />}\r\n        {activeTab === \"Products\" && <ProductsAdmin />}\r\n        {activeTab === \"Categories\" && <CategoriesAdmin />}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import axios from \"axios\";\r\n\r\nconst categoriesApi = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n\r\nexport const getAllCategories = async () => {\r\n  const response = await categoriesApi.get(\"/api/web-shop/categories\");\r\n  return response.data;\r\n};\r\n\r\nexport const getCategoryById = async (id) => {\r\n  const response = await categoriesApi.get(`/api/web-shop/categories/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createCategory = async (newCategory) => {\r\n  await categoriesApi.post(`/api/web-shop/categories`, newCategory);\r\n};\r\n\r\nexport const deleteCategory = async (id) => {\r\n  await categoriesApi.delete(`/api/web-shop/categories/${id}`);\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getAllCategories } from \"../Categories\";\r\n\r\nexport const useGetAllCategories = () => {\r\n  return useQuery({\r\n    queryKey: [\"categories\"],\r\n    queryFn: () => getAllCategories(),\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst ordersApi = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n\r\nexport const getAllOrders = async () => {\r\n  const response = await ordersApi.get(\"/api/web-shop/orders\");\r\n  return response.data;\r\n};\r\n\r\nexport const getOrderById = async (id) => {\r\n  const response = await ordersApi.get(`/api/web-shop/orders/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getUserOrders = async (id) => {\r\n  const response = await ordersApi.get(`/api/web-shop/orders/userorders/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createOrder = async (orderData) => {\r\n  const { id, cart, total } = orderData;\r\n  const newOrder = await ordersApi.post(`/api/web-shop/orders/${id}`, { cart, total });\r\n  return newOrder;\r\n};\r\n\r\nexport const updateOrderStatus = async (id, updatedStatus) => {\r\n  await ordersApi.patch(`/api/web-shop/orders/${id}`, updatedStatus);\r\n};\r\n\r\nexport const deleteOrder = async (id) => {\r\n  await ordersApi.delete(`/api/web-shop/orders/${id}`);\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getUserOrders } from \"../Orders\";\r\n\r\nexport const useGetUserOrders = (id) => {\r\n  return useQuery({\r\n    queryKey: [\"user-orders\", id],\r\n    queryFn: () => getUserOrders(id),\r\n    enabled: !!id,\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst productsApi = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n\r\nexport const getAllProducts = async () => {\r\n  const response = await productsApi.get(\"/api/web-shop/products\");\r\n  return response.data;\r\n};\r\n\r\nexport const getProductById = async (id) => {\r\n  const response = await productsApi.get(`/api/web-shop/products/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getProductsByCategory = async (category) => {\r\n  const response = await productsApi.get(`/api/web-shop/products/category/${category}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createProduct = async (newProduct) => {\r\n  await productsApi.post(`/api/web-shop/products`, newProduct);\r\n};\r\n\r\nexport const updateProduct = async (updatedProduct) => {\r\n  const { id } = updatedProduct;\r\n  await productsApi.put(`/api/web-shop/products/${id}`, updatedProduct);\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n  await productsApi.delete(`/api/web-shop/products/${id}`);\r\n};\r\n\r\nexport const searchProduct = async (searchWord) => {\r\n  const response = await productsApi.get(`/api/web-shop/products/search/${searchWord}`);\r\n  return response.data;\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getProductById } from \"../Products\";\r\n\r\nexport const useGetProductById = (id) => {\r\n  return useQuery({\r\n    queryKey: [\"product-by-id\", id],\r\n    queryFn: () => getProductById(id),\r\n    enabled: !!id,\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst usersApi = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n\r\nexport const getAllUsers = async () => {\r\n  const response = await usersApi.get(\"/api/users\");\r\n  return response.data;\r\n};\r\n\r\nexport const getUserById = async (id) => {\r\n  const response = await usersApi.get(`/api/users/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createUser = async (newUser) => {\r\n  await usersApi.post(`/api/users`, newUser);\r\n};\r\n\r\nexport const updateUser = async (updatedUser) => {\r\n  const { id } = updatedUser;\r\n  await usersApi.put(`/api/users/${id}`, updatedUser);\r\n};\r\n\r\nexport const deleteUser = async (id) => {\r\n  await usersApi.delete(`/api/users/${id}`);\r\n};\r\n\r\nexport const searchUser = async (searchWord) => {\r\n  const response = await usersApi.get(`/api/users/search/${searchWord}`);\r\n  return response.data;\r\n};\r\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { createUser } from \"../Users\";\r\n\r\nexport const useCreateUser = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(createUser, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"users\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"user-by-id\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"searched-user\"] });\r\n    },\r\n  });\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getUserById } from \"../Users\";\r\n\r\nexport const useGetUserById = (id) => {\r\n  return useQuery({\r\n    queryKey: [\"user-by-id\", id],\r\n    queryFn: () => getUserById(id),\r\n    enabled: !!id,\r\n  });\r\n};\r\n","import tw from \"tailwind-styled-components\";\r\n\r\nexport const FormContainer = tw.div`\r\n    w-full\r\n    p-4\r\n    text-center\r\n`;\r\n\r\nexport const Form = tw.form`\r\n    w-full\r\n    flex\r\n    flex-col\r\n    items-center\r\n    gap-2\r\n`;\r\n\r\nexport const FormWithLabel = tw.form`\r\n    w-full\r\n    flex\r\n    flex-col\r\n    items-center\r\n`;\r\n\r\nexport const Input = tw.input`\r\n    w-4/5\r\n    rounded\r\n    hover:shadow-lg\r\n    placeholder: pl-1\r\n`;\r\nexport const Textarea = tw.textarea`\r\n    w-4/5\r\n    rounded\r\n    hover:shadow-lg\r\n    placeholder: pl-1\r\n`;\r\nexport const Select = tw.select`\r\n    w-4/5\r\n    rounded\r\n    hover:shadow-lg\r\n    placeholder: pl-1\r\n`;\r\n\r\nexport const SubmitInput = tw.input`\r\n    min-w-[100px]\r\n    p-2\r\n    rounded\r\n    shadow\r\n    bg-primary-darkgreen\r\n    text-white\r\n    hover:scale-110 hover:transition duration-300 cursor-pointer\r\n`;\r\n\r\nexport const FormError = tw.p`\r\n    text-sm\r\n    text-red-700\r\n`;\r\n"],"names":["TabContainer","tw","StyledTabUl","StyledTab","CreateUserForm","useForm","register","handleSubmit","errors","formState","reset","useCreateUser","mutate","isSuccess","isLoading","isError","error","className","onSubmit","newUser","handleCreateUser","required","minLength","value","message","placeholder","type","firstname","lastname","email","password","SearchResult","data","isInitialLoading","handleSearchClick","map","user","onClick","id","SearchUserForm","searchWord","watch","useQuery","queryKey","queryFn","searchUser","enabled","searchword","AdminContainer","DeleteUserButton","setSearchedUserId","queryClient","useQueryClient","useMutation","deleteUser","onSuccess","invalidateQueries","useDeleteUser","handleDeleteUser","UpdateUserForm","useGetUserById","userIsInitalLoading","userIsError","userError","updateUser","useUpdateUser","updateLoading","updateIsError","updateError","useEffect","updatedUser","handleUpdateUser","htmlFor","defaultValue","hidden","SearchedUserOrders","useGetUserOrders","orders","order","order_id","product","product_id","product_name","product_qty","product_price","status","total","UsersAdmin","useState","searchedUserId","CreateProductForm","createProduct","useCreateProduct","useGetAllCategories","categories","isCategoriesError","categoriesError","newProduct","handleCreateProduct","productname","disabled","category","category_name","description","product_img_url","price","ProductSearchResult","stock","SearchProductForm","searchProduct","productsearchword","DeleteProductButton","setSearchedProductId","deleteProduct","useDeleteProduct","handleDeleteProduct","UpdateProductForm","useGetProductById","productIsInitalLoading","productIsError","productError","updateProduct","useUpdateProduct","updatedProduct","handleUpdateProduct","SearchedProductInfo","ProductsAdmin","searchedProductId","CreateCategoryForm","createCategory","useCreateCategory","newCategory","handleCreateCategory","categoryname","category_img_url","ShowCategories","deleteCategory","useDeleteCategory","CategoriesAdmin","tabs","activeTab","setActiveTab","useContext","UserContext","role","tab","i","categoriesApi","axios","baseURL","process","getAllCategories","get","response","post","delete","ordersApi","getUserOrders","createOrder","orderData","cart","newOrder","productsApi","getProductById","getProductsByCategory","put","usersApi","getUserById","createUser","FormContainer","Form","Input","Textarea","Select","SubmitInput","FormError"],"sourceRoot":""}