{"version":3,"file":"static/js/684.4f69443e.chunk.js","mappings":"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","sources":["pages/Login/components/LogoutButton.jsx","queries/auth/hooks/useLogout.jsx","pages/User/components/userDetailsTable.jsx","pages/User/components/userOrdersTable.jsx","pages/User/User.jsx","queries/orders/Orders.jsx","queries/orders/hooks/useGetUserOrders.jsx","queries/users/Users.jsx","queries/users/hooks/useGetUserById.jsx"],"sourcesContent":["import { useLogout } from \"../../../queries/auth/hooks/useLogout\";\r\nimport { StyledLogoutButton } from \"../../../styles/styledButtons\";\r\n\r\nexport const LogoutButton = () => {\r\n  const { mutate, isLoading, isError, error } = useLogout();\r\n\r\n  const handleLogout = () => {\r\n    mutate();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledLogoutButton onClick={() => handleLogout()}>\r\n        Logout\r\n      </StyledLogoutButton>\r\n      {isLoading && <div>Loading...</div>}\r\n      {isError && <div>{error.message}</div>}\r\n    </>\r\n  );\r\n};\r\n","import { useMutation } from \"@tanstack/react-query\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../../../context/UserContext\";\r\nimport { logout } from \"../Auth\";\r\n\r\nexport const useLogout = () => {\r\n  const { removeCurrentUser } = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n\r\n  return useMutation(logout, {\r\n    onSuccess: () => {\r\n      removeCurrentUser();\r\n      navigate(\"/\");\r\n    },\r\n  });\r\n};\r\n","import {\r\n  Table,\r\n  TableTheadTr,\r\n  TableTheadTd,\r\n  TableTbodyTr,\r\n  TableTbodyTd,\r\n} from \"../../../styles/styledTable\";\r\n\r\nexport const UserDetailsTable = (user) => {\r\n  const { userData } = user;\r\n\r\n  return (\r\n    <Table>\r\n      <thead>\r\n        <TableTheadTr>\r\n          <TableTheadTd>User details</TableTheadTd>\r\n          <TableTheadTd />\r\n        </TableTheadTr>\r\n      </thead>\r\n      <tbody>\r\n        <TableTbodyTr>\r\n          <TableTbodyTd>First name</TableTbodyTd>\r\n          <TableTbodyTd>{userData.firstname}</TableTbodyTd>\r\n        </TableTbodyTr>\r\n        <TableTbodyTr>\r\n          <TableTbodyTd>Last name</TableTbodyTd>\r\n          <TableTbodyTd>{userData.lastname}</TableTbodyTd>\r\n        </TableTbodyTr>\r\n        <TableTbodyTr>\r\n          <TableTbodyTd>Email</TableTbodyTd>\r\n          <TableTbodyTd>{userData.email}</TableTbodyTd>\r\n        </TableTbodyTr>\r\n        <TableTbodyTr>\r\n          <TableTbodyTd>Role</TableTbodyTd>\r\n          <TableTbodyTd>{userData.role}</TableTbodyTd>\r\n        </TableTbodyTr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n","import {\r\n  Table,\r\n  TableTheadTr,\r\n  TableTheadTd,\r\n  TableTbodyTr,\r\n  TableTbodyTd,\r\n  TableTbodyTotalTr,\r\n} from \"../../../styles/styledTable\";\r\n\r\nexport const UserOrdersTable = (order) => {\r\n  const { ordersData } = order;\r\n\r\n  return (\r\n    <>\r\n      {ordersData.map((order) => (\r\n        <Table key={order[0].order_id}>\r\n          <thead>\r\n            <TableTheadTr>\r\n              <TableTheadTd>\r\n                <b>#{order[0].order_id}</b>\r\n              </TableTheadTd>\r\n              <TableTheadTd>Product id</TableTheadTd>\r\n              <TableTheadTd>Product name</TableTheadTd>\r\n              <TableTheadTd>Quantity ordered</TableTheadTd>\r\n              <TableTheadTd>Product total</TableTheadTd>\r\n            </TableTheadTr>\r\n          </thead>\r\n          <tbody>\r\n            {order.map((product) => (\r\n              <TableTbodyTr key={product.product_id}>\r\n                <TableTbodyTd />\r\n                <TableTbodyTd>{product.product_id}</TableTbodyTd>\r\n                <TableTbodyTd>{product.product_name}</TableTbodyTd>\r\n                <TableTbodyTd>{product.product_qty}</TableTbodyTd>\r\n                <TableTbodyTd>\r\n                  ${product.product_price * product.product_qty}\r\n                </TableTbodyTd>\r\n              </TableTbodyTr>\r\n            ))}\r\n            <TableTbodyTotalTr>\r\n              <TableTbodyTd />\r\n              <TableTbodyTd>Status:</TableTbodyTd>\r\n              <TableTbodyTd>{order[0].status}</TableTbodyTd>\r\n              <TableTbodyTd>Total:</TableTbodyTd>\r\n              <TableTbodyTd>${order[0].total}</TableTbodyTd>\r\n            </TableTbodyTotalTr>\r\n          </tbody>\r\n        </Table>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useGetUserById } from \"../../queries/users/hooks/useGetUserById\";\r\nimport { useGetUserOrders } from \"../../queries/orders/hooks/useGetUserOrders\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { useContext } from \"react\";\r\nimport { LogoutButton } from \"../Login/components/LogoutButton\";\r\nimport { UserDetailsTable } from \"./components/userDetailsTable\";\r\nimport { UserOrdersTable } from \"./components/userOrdersTable\";\r\n\r\nfunction Product() {\r\n  const { id } = useParams();\r\n  const { user } = useContext(UserContext);\r\n  const {\r\n    data: userData,\r\n    isLoading: userLoading,\r\n    isError: isUserError,\r\n    error: userError,\r\n  } = useGetUserById(id);\r\n  const {\r\n    data: ordersData,\r\n    isLoading: ordersLoading,\r\n    isError: isOrdersError,\r\n    error: ordersError,\r\n  } = useGetUserOrders(id);\r\n\r\n  if (!user || (user.id !== parseInt(id) && user.role !== \"admin\")) {\r\n    return <div>401 Authorization denied</div>;\r\n  }\r\n\r\n  if (userLoading || ordersLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (isUserError || isOrdersError) {\r\n    return (\r\n      <>\r\n        <div>{userError?.message}</div>\r\n        <div>{ordersError?.message}</div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"m-4 flex flex-wrap gap-8\">\r\n      <div>\r\n        <h3>User</h3>\r\n        <div>\r\n          {userData && <UserDetailsTable userData={userData} />}\r\n          {user.id === parseInt(id) && <LogoutButton />}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h3>Orders</h3>\r\n        <div>{ordersData && <UserOrdersTable ordersData={ordersData} />}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import axios from \"axios\";\r\n\r\nconst ordersApi = axios.create({\r\n  baseURL: \"http://localhost:3000\",\r\n});\r\n\r\nexport const getAllOrders = async () => {\r\n  const response = await ordersApi.get(\"/api/orders\");\r\n  return response.data;\r\n};\r\n\r\nexport const getOrderById = async (id) => {\r\n  const response = await ordersApi.get(`/api/orders/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getUserOrders = async (id) => {\r\n  const response = await ordersApi.get(`/api/orders/userorders/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createOrder = async (orderData) => {\r\n  const { id, cart, total } = orderData;\r\n  const newOrder = await ordersApi.post(`/api/orders/${id}`, { cart, total });\r\n  return newOrder;\r\n};\r\n\r\nexport const updateOrderStatus = async (id, updatedStatus) => {\r\n  await ordersApi.patch(`/api/orders/${id}`, updatedStatus);\r\n};\r\n\r\nexport const deleteOrder = async (id) => {\r\n  await ordersApi.delete(`/api/orders/${id}`);\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getUserOrders } from \"../Orders\";\r\n\r\nexport const useGetUserOrders = (id) => {\r\n  return useQuery({\r\n    queryKey: [\"user-orders\", id],\r\n    queryFn: () => getUserOrders(id),\r\n    enabled: !!id,\r\n  });\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst usersApi = axios.create({\r\n  baseURL: \"http://localhost:3000\",\r\n});\r\n\r\nexport const getAllUsers = async () => {\r\n  const response = await usersApi.get(\"/api/users\");\r\n  return response.data;\r\n};\r\n\r\nexport const getUserById = async (id) => {\r\n  const response = await usersApi.get(`/api/users/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createUser = async (newUser) => {\r\n  await usersApi.post(`/api/users`, newUser);\r\n};\r\n\r\nexport const updateUser = async (updatedUser) => {\r\n  const { id } = updatedUser;\r\n  await usersApi.put(`/api/users/${id}`, updatedUser);\r\n};\r\n\r\nexport const deleteUser = async (id) => {\r\n  await usersApi.delete(`/api/users/${id}`);\r\n};\r\n\r\nexport const searchUser = async (searchWord) => {\r\n  const response = await usersApi.get(`/api/users/search/${searchWord}`);\r\n  return response.data;\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getUserById } from \"../Users\";\r\n\r\nexport const useGetUserById = (id) => {\r\n  return useQuery({\r\n    queryKey: [\"user-by-id\", id],\r\n    queryFn: () => getUserById(id),\r\n    enabled: !!id,\r\n  });\r\n};\r\n"],"names":["LogoutButton","removeCurrentUser","useContext","UserContext","navigate","useNavigate","useMutation","logout","onSuccess","useLogout","mutate","isLoading","isError","error","onClick","message","UserDetailsTable","user","userData","firstname","lastname","email","role","UserOrdersTable","order","ordersData","map","order_id","product","product_id","product_name","product_qty","product_price","status","total","id","useParams","useGetUserById","data","userLoading","isUserError","userError","useGetUserOrders","ordersLoading","isOrdersError","ordersError","parseInt","className","ordersApi","axios","baseURL","getUserOrders","get","response","createOrder","orderData","cart","post","newOrder","useQuery","queryKey","queryFn","enabled","usersApi","getUserById","createUser","newUser","updateUser","updatedUser","put","deleteUser","delete","searchUser","searchWord"],"sourceRoot":""}