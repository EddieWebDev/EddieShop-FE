{"version":3,"file":"static/js/924.420036a2.chunk.js","mappings":"kMAEaA,EAAyBC,EAAAA,EAAAA,IAAM,2JAW/BC,EAAmBD,EAAAA,EAAAA,IAAM,0EAOzBE,EAA6BF,EAAAA,EAAAA,IAAM,uG,uCCgEhD,MAzEA,WACE,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAExB,GAA4CC,EAAAA,EAAAA,GAAkBL,GAAtDM,EAAI,EAAJA,KAAiBC,GAAF,EAATC,UAAkB,EAAPD,SAASE,EAAK,EAALA,MAUlC,OAJIF,GACIE,EAAMC,SAIZ,6BACGJ,IACC,4BACE,wBAAKA,EAAKK,eACV,UAACf,EAAsB,YACrB,iBAAKgB,UAAU,sCAAqC,WAClD,SAACd,EAAgB,CACfe,IAAG,UAAKP,EAAKQ,iBACbC,IAAG,UAAKT,EAAKK,gBAEf,UAACZ,EAA0B,YACzB,2BACE,uBAAG,iBACFO,EAAKN,OAER,2BACE,uBAAG,YAAW,IAAEM,EAAKU,UAEvB,2BACE,uBAAG,YACFV,EAAKW,UAER,2BACE,uBAAG,eACFX,EAAKY,aAER,2BACE,uBAAG,mBACH,cAAGN,UAAU,UAAS,SAAEN,EAAKa,uBAIlCb,EAAKW,MAAQ,GACZ,SAAC,KAAe,CAACL,UAAU,mBAAmBQ,UAAQ,WAAC,kBAIvD,SAAC,KAAe,CACdC,QAAS,kBACPnB,EAAKoB,aACHhB,EAAKN,GACLM,EAAKK,YACLL,EAAKU,MACLV,EAAKW,MACN,EACF,SACF,uBASf,C,wMChFMM,E,QAAcC,EAAAA,OAAa,CAC/BC,QAASC,mCAQEC,EAAc,yCAAG,WAAO3B,GAAE,4FACduB,EAAYK,IAAI,0BAAD,OAA2B5B,IAAM,KAAD,EAAxD,OAAR6B,EAAQ,yBACPA,EAASvB,MAAI,2CACrB,gBAH0B,sCAKdwB,EAAqB,yCAAG,WAAOZ,GAAQ,4FAC3BK,EAAYK,IAAI,mCAAD,OAAoCV,IAAY,KAAD,EAAvE,OAARW,EAAQ,yBACPA,EAASvB,MAAI,2CACrB,gBAHiC,sCAKrByB,EAAa,yCAAG,WAAOC,GAAU,sFACtCT,EAAYU,KAAK,yBAA0BD,GAAY,KAAD,sCAC7D,gBAFyB,sCAIbE,EAAa,yCAAG,WAAOC,GAAc,4EACtC,OAAFnC,EAAOmC,EAAPnC,GAAE,SACJuB,EAAYa,IAAI,0BAAD,OAA2BpC,GAAMmC,GAAgB,KAAD,sCACtE,gBAHyB,sCAKbE,EAAa,yCAAG,WAAOrC,GAAE,sFAC9BuB,EAAYe,OAAO,0BAAD,OAA2BtC,IAAM,KAAD,sCACzD,gBAFyB,sCAIbuC,EAAa,yCAAG,WAAOC,GAAU,4FACrBjB,EAAYK,IAAI,iCAAD,OAAkCY,IAAc,KAAD,EAAvE,OAARX,EAAQ,yBACPA,EAASvB,MAAI,2CACrB,gBAHyB,qC,+EC/BbD,EAAoB,SAACL,GAChC,OAAOyC,EAAAA,EAAAA,GAAS,CACdC,SAAU,CAAC,gBAAiB1C,GAC5B2C,QAAS,kBAAMhB,EAAAA,EAAAA,IAAe3B,EAAG,EACjC4C,UAAW5C,GAEf,C","sources":["styles/styledProduct.jsx","pages/Product/Product.jsx","queries/products/Products.jsx","queries/products/hooks/useGetProductById.jsx"],"sourcesContent":["import tw from \"tailwind-styled-components\";\r\n\r\nexport const SingleProductContainer = tw.div`\r\n    flex\r\n    flex-col\r\n    p-2\r\n    my-4\r\n    border-4\r\n    border-primary-darkgreen\r\n    bg-primary-darkbeige\r\n    items-center\r\n`;\r\n\r\nexport const SingleProductImg = tw.img`\r\n    w-96\r\n    h-56\r\n    my-4\r\n    object-contain\r\n`;\r\n\r\nexport const SingleProductInfoContainer = tw.div`\r\n   flex\r\n   flex-col\r\n   items-left\r\n   justify-center\r\n   gap-4\r\n   max-w-sm\r\n`;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useGetProductById } from \"../../queries/products/hooks/useGetProductById\";\r\nimport {\r\n  SingleProductContainer,\r\n  SingleProductImg,\r\n  SingleProductInfoContainer,\r\n} from \"../../styles/styledProduct\";\r\nimport { useContext } from \"react\";\r\nimport { CartContext } from \"../../context/CartContext\";\r\nimport { AddToCartButton } from \"../../styles/styledButtons\";\r\n\r\nfunction Product() {\r\n  const { id } = useParams();\r\n\r\n  const cart = useContext(CartContext);\r\n\r\n  const { data, isLoading, isError, error } = useGetProductById(id);\r\n\r\n  if (isLoading) {\r\n    <div>Loading...</div>;\r\n  }\r\n\r\n  if (isError) {\r\n    <div>{error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {data && (\r\n        <div>\r\n          <h2>{data.productname}</h2>\r\n          <SingleProductContainer>\r\n            <div className=\"flex flex-wrap max-w-full p-4 gap-4\">\r\n              <SingleProductImg\r\n                src={`${data.product_img_url}`}\r\n                alt={`${data.productname}`}\r\n              />\r\n              <SingleProductInfoContainer>\r\n                <h5>\r\n                  <b>Product id: </b>\r\n                  {data.id}\r\n                </h5>\r\n                <h5>\r\n                  <b>Price: </b>${data.price}\r\n                </h5>\r\n                <h5>\r\n                  <b>Stock: </b>\r\n                  {data.stock}\r\n                </h5>\r\n                <h5>\r\n                  <b>Category: </b>\r\n                  {data.category}\r\n                </h5>\r\n                <h5>\r\n                  <b>Description: </b>\r\n                  <p className=\"text-sm\">{data.description}</p>\r\n                </h5>\r\n              </SingleProductInfoContainer>\r\n            </div>\r\n            {data.stock < 1 ? (\r\n              <AddToCartButton className=\"bg-primary-green\" disabled>\r\n                Out of stock\r\n              </AddToCartButton>\r\n            ) : (\r\n              <AddToCartButton\r\n                onClick={() =>\r\n                  cart.addOneToCart(\r\n                    data.id,\r\n                    data.productname,\r\n                    data.price,\r\n                    data.stock\r\n                  )\r\n                }\r\n              >\r\n                Add to cart\r\n              </AddToCartButton>\r\n            )}\r\n          </SingleProductContainer>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import axios from \"axios\";\r\n\r\nconst productsApi = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n\r\nexport const getAllProducts = async () => {\r\n  const response = await productsApi.get(\"/api/web-shop/products\");\r\n  return response.data;\r\n};\r\n\r\nexport const getProductById = async (id) => {\r\n  const response = await productsApi.get(`/api/web-shop/products/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getProductsByCategory = async (category) => {\r\n  const response = await productsApi.get(`/api/web-shop/products/category/${category}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createProduct = async (newProduct) => {\r\n  await productsApi.post(`/api/web-shop/products`, newProduct);\r\n};\r\n\r\nexport const updateProduct = async (updatedProduct) => {\r\n  const { id } = updatedProduct;\r\n  await productsApi.put(`/api/web-shop/products/${id}`, updatedProduct);\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n  await productsApi.delete(`/api/web-shop/products/${id}`);\r\n};\r\n\r\nexport const searchProduct = async (searchWord) => {\r\n  const response = await productsApi.get(`/api/web-shop/products/search/${searchWord}`);\r\n  return response.data;\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getProductById } from \"../Products\";\r\n\r\nexport const useGetProductById = (id) => {\r\n  return useQuery({\r\n    queryKey: [\"product-by-id\", id],\r\n    queryFn: () => getProductById(id),\r\n    enabled: !!id,\r\n  });\r\n};\r\n"],"names":["SingleProductContainer","tw","SingleProductImg","SingleProductInfoContainer","id","useParams","cart","useContext","CartContext","useGetProductById","data","isError","isLoading","error","message","productname","className","src","product_img_url","alt","price","stock","category","description","disabled","onClick","addOneToCart","productsApi","axios","baseURL","process","getProductById","get","response","getProductsByCategory","createProduct","newProduct","post","updateProduct","updatedProduct","put","deleteProduct","delete","searchProduct","searchWord","useQuery","queryKey","queryFn","enabled"],"sourceRoot":""}