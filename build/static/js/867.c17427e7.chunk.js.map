{"version":3,"file":"static/js/867.c17427e7.chunk.js","mappings":"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","sources":["pages/CreateAccount/components/createAccountForm.jsx","pages/CreateAccount/CreateAccount.jsx","queries/users/Users.jsx","queries/users/hooks/useCreateUser.jsx","styles/styledForm.jsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { useCreateUser } from \"../../../queries/users/hooks/useCreateUser\";\r\nimport {\r\n  FormContainer,\r\n  Form,\r\n  Input,\r\n  SubmitInput,\r\n  FormError,\r\n} from \"../../../styles/styledForm\";\r\n\r\nexport const CreateAccountForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const { mutate, isSuccess, isLoading, isError, error } = useCreateUser();\r\n\r\n  const handleCreateUser = (newUser) => {\r\n    mutate(newUser);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <div className=\"w-full text-center text-white bg-primary-green\"></div>\r\n      <FormContainer>\r\n        <Form onSubmit={handleSubmit((newUser) => handleCreateUser(newUser))}>\r\n          <Input\r\n            {...register(\"firstname\", {\r\n              required: \"First name is required\",\r\n              minLength: { value: 2, message: \"Min length 2\" },\r\n            })}\r\n            placeholder=\"First Name\"\r\n            type=\"text\"\r\n          />\r\n          <FormError>{errors.firstname?.message}</FormError>\r\n          <Input\r\n            {...register(\"lastname\", {\r\n              required: \"Last name is required\",\r\n              minLength: { value: 2, message: \"Min length 2\" },\r\n            })}\r\n            placeholder=\"Last Name\"\r\n            type=\"text\"\r\n          />\r\n          <FormError>{errors.lastname?.message}</FormError>\r\n          <Input\r\n            {...register(\"email\", {\r\n              required: \"Email is required\",\r\n              minLength: { value: 5, message: \"Min length 5\" },\r\n            })}\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n          />\r\n          <FormError>{errors.email?.message}</FormError>\r\n          <Input\r\n            {...register(\"password\", {\r\n              required: \"Password is required\",\r\n              minLength: { value: 5, message: \"Min length 5\" },\r\n            })}\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          <FormError>{errors.password?.message}</FormError>\r\n          <SubmitInput type=\"submit\" value=\"Create account\" />\r\n        </Form>\r\n        {isSuccess && <h5 className=\"mt-4\">Account created</h5>}\r\n        {isLoading && <h5 className=\"mt-4\">Loading...</h5>}\r\n        {isError && <h5 className=\"mt-4\">{error.message}</h5>}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n","import { CreateAccountForm } from \"./components/createAccountForm\";\r\n\r\nconst CreateAccount = () => {\r\n  return (\r\n    <section>\r\n      <div className=\"flex flex-col gap-4 my-4\">\r\n        <h2>Create a new account here</h2>\r\n        <div>\r\n          <CreateAccountForm />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CreateAccount;\r\n","import axios from \"axios\";\r\n\r\nconst usersApi = axios.create({\r\n  baseURL: \"http://localhost:3000\",\r\n});\r\n\r\nexport const getAllUsers = async () => {\r\n  const response = await usersApi.get(\"/api/users\");\r\n  return response.data;\r\n};\r\n\r\nexport const getUserById = async (id) => {\r\n  const response = await usersApi.get(`/api/users/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createUser = async (newUser) => {\r\n  await usersApi.post(`/api/users`, newUser);\r\n};\r\n\r\nexport const updateUser = async (updatedUser) => {\r\n  const { id } = updatedUser;\r\n  await usersApi.put(`/api/users/${id}`, updatedUser);\r\n};\r\n\r\nexport const deleteUser = async (id) => {\r\n  await usersApi.delete(`/api/users/${id}`);\r\n};\r\n\r\nexport const searchUser = async (searchWord) => {\r\n  const response = await usersApi.get(`/api/users/search/${searchWord}`);\r\n  return response.data;\r\n};\r\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { createUser } from \"../Users\";\r\n\r\nexport const useCreateUser = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(createUser, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"users\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"user-by-id\"] });\r\n      queryClient.invalidateQueries({ queryKey: [\"searched-user\"] });\r\n    },\r\n  });\r\n};\r\n","import tw from \"tailwind-styled-components\";\r\n\r\nexport const FormContainer = tw.div`\r\n    w-full\r\n    p-4\r\n    text-center\r\n`;\r\n\r\nexport const Form = tw.form`\r\n    w-full\r\n    flex\r\n    flex-col\r\n    items-center\r\n    gap-2\r\n`;\r\n\r\nexport const FormWithLabel = tw.form`\r\n    w-full\r\n    flex\r\n    flex-col\r\n    items-center\r\n`;\r\n\r\nexport const Input = tw.input`\r\n    w-4/5\r\n    rounded\r\n    hover:shadow-lg\r\n    placeholder: pl-1\r\n`;\r\nexport const Textarea = tw.textarea`\r\n    w-4/5\r\n    rounded\r\n    hover:shadow-lg\r\n    placeholder: pl-1\r\n`;\r\nexport const Select = tw.select`\r\n    w-4/5\r\n    rounded\r\n    hover:shadow-lg\r\n    placeholder: pl-1\r\n`;\r\n\r\nexport const SubmitInput = tw.input`\r\n    min-w-[100px]\r\n    p-2\r\n    rounded\r\n    shadow\r\n    bg-primary-darkgreen\r\n    text-white\r\n    hover:scale-110 hover:transition duration-300 cursor-pointer\r\n`;\r\n\r\nexport const FormError = tw.p`\r\n    text-sm\r\n    text-red-700\r\n`;\r\n"],"names":["CreateAccountForm","useForm","register","handleSubmit","errors","formState","reset","useCreateUser","mutate","isSuccess","isLoading","isError","error","className","onSubmit","newUser","handleCreateUser","required","minLength","value","message","placeholder","type","firstname","lastname","email","password","usersApi","axios","baseURL","getUserById","id","get","response","data","createUser","post","updateUser","updatedUser","put","deleteUser","delete","searchUser","searchWord","queryClient","useQueryClient","useMutation","onSuccess","invalidateQueries","queryKey","FormContainer","tw","Form","Input","Textarea","Select","SubmitInput","FormError"],"sourceRoot":""}